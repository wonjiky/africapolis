{"version":3,"file":"d3plus-color.js","sources":["../src/add.js","../src/defaults.js","../src/assign.js","../src/contrast.js","../src/legible.js","../src/lighter.js","../src/subtract.js"],"sourcesContent":["import {hsl} from \"d3-color\";\n\n/**\n    @function colorAdd\n    @desc Adds two colors together.\n    @param {String} c1 The first color, a valid CSS color string.\n    @param {String} c2 The second color, also a valid CSS color string.\n    @param {String} [o1 = 1] Value from 0 to 1 of the first color's opacity.\n    @param {String} [o2 = 1] Value from 0 to 1 of the first color's opacity.\n    @returns {String}\n*/\nexport default function(c1, c2, o1 = 1, o2 = 1) {\n  c1 = hsl(c1);\n  c2 = hsl(c2);\n  let d = Math.abs(c2.h * o2 - c1.h * o1);\n  if (d > 180) d -= 360;\n  let h = (Math.min(c1.h, c2.h) + d / 2) % 360;\n  const l = c1.l + (c2.l * o2 - c1.l * o1) / 2,\n        s = c1.s + (c2.s * o2 - c1.s * o1) / 2;\n  // a = o1 + (o2 - o1) / 2;\n  if (h < 0) h += 360;\n  return hsl(`hsl(${h},${s * 100}%,${l * 100}%)`).toString();\n  // return hsl(`hsl(${h},${s * 100}%,${l * 100}%,${a})`).toString();\n}\n","import {scaleOrdinal} from \"d3-scale\";\n\n/**\n    @namespace {Object} colorDefaults\n    @desc A set of default color values used when assigning colors based on data.\n      *\n      * | Name | Default | Description |\n      * |---|---|---|\n      * | dark | #444444 | Used in the [contrast](#contrast) function when the color given is very light. |\n      * | light | #f7f7f7 | Used in the [contrast](#contrast) function when the color given is very dark. |\n      * | missing | #cccccc | Used in the [assign](#assign) function when the value passed is `null` or `undefined`. |\n      * | off | #b22200 | Used in the [assign](#assign) function when the value passed is `false`. |\n      * | on | #224f20 | Used in the [assign](#assign) function when the value passed is `true`. |\n      * | scale | #b22200, #eace3f, #282f6b, #b35c1e, #224f20, #5f487c, #759143, #419391, #993c88, #e89c89, #ffee8d, #afd5e8, #f7ba77, #a5c697, #c5b5e5, #d1d392, #bbefd0, #e099cf | An ordinal scale used in the [assign](#assign) function for non-valid color strings and numbers. |\n*/\nconst defaults = {\n  dark: \"#444444\",\n  light: \"#f7f7f7\",\n  missing: \"#cccccc\",\n  off: \"#b22200\",\n  on: \"#224f20\",\n  scale: scaleOrdinal().range([\n    \"#b22200\", \"#282f6b\", \"#eace3f\", \"#b35c1e\", \"#224f20\", \"#5f487c\",\n    \"#759143\", \"#419391\", \"#993c88\", \"#e89c89\", \"#ffee8d\", \"#afd5e8\",\n    \"#f7ba77\", \"#a5c697\", \"#c5b5e5\", \"#d1d392\", \"#bbefd0\", \"#e099cf\"\n  ])\n};\n\n/**\n    Returns a color based on a key, whether it is present in a user supplied object or in the default object.\n    @returns {String}\n    @private\n*/\nexport function getColor(k, u = {}) {\n  return k in u ? u[k] : k in defaults ? defaults[k] : defaults.missing;\n}\n\nexport default defaults;\n","import {color} from \"d3-color\";\nimport {getColor} from \"./defaults\";\n\n/**\n    @function colorAssign\n    @desc Assigns a color to a value using a predefined set of defaults.\n    @param {String} c A valid CSS color string.\n    @param {Object} [u = defaults] An object containing overrides of the default colors.\n    @returns {String}\n*/\nexport default function(c, u = {}) {\n\n  // If the value is null or undefined, set to grey.\n  if ([null, void 0].indexOf(c) >= 0) return getColor(\"missing\", u);\n  // Else if the value is true, set to green.\n  else if (c === true) return getColor(\"on\", u);\n  // Else if the value is false, set to red.\n  else if (c === false) return getColor(\"off\", u);\n\n  const p = color(c);\n  // If the value is not a valid color string, use the color scale.\n  if (!p) return getColor(\"scale\", u)(c);\n\n  return c.toString();\n\n}\n","import {getColor} from \"./defaults\";\nimport {rgb} from \"d3-color\";\n\n/**\n    @function colorContrast\n    @desc A set of default color values used when assigning colors based on data.\n    @param {String} c A valid CSS color string.\n    @param {Object} [u = defaults] An object containing overrides of the default colors.\n    @returns {String}\n*/\nexport default function(c, u = {}) {\n  c = rgb(c);\n  const yiq = (c.r * 299 + c.g * 587 + c.b * 114) / 1000;\n  return yiq >= 128 ? getColor(\"dark\", u) : getColor(\"light\", u);\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorLegible\n    @desc Darkens a color so that it will appear legible on a white background.\n    @param {String} c A valid CSS color string.\n    @returns {String}\n*/\nexport default function(c) {\n  c = hsl(c);\n  if (c.l > 0.45) {\n    if (c.s > 0.8) c.s = 0.8;\n    c.l = 0.45;\n  }\n  return c.toString();\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorLighter\n    @desc Similar to d3.color.brighter, except that this also reduces saturation so that colors don't appear neon.\n    @param {String} c A valid CSS color string.\n    @param {String} [i = 0.5] A value from 0 to 1 dictating the strength of the function.\n    @returns {String}\n*/\nexport default function(c, i = 0.5) {\n  c = hsl(c);\n  i *= 1 - c.l;\n  c.l += i;\n  c.s -= i;\n  return c.toString();\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorSubtract\n    @desc Subtracts one color from another.\n    @param {String} c1 The base color, a valid CSS color string.\n    @param {String} c2 The color to remove from the base color, also a valid CSS color string.\n    @param {String} [o1 = 1] Value from 0 to 1 of the first color's opacity.\n    @param {String} [o2 = 1] Value from 0 to 1 of the first color's opacity.\n    @returns {String}\n*/\nexport default function(c1, c2, o1 = 1, o2 = 1) {\n  c1 = hsl(c1);\n  c2 = hsl(c2);\n  let d = c2.h * o2 - c1.h * o1;\n  if (Math.abs(d) > 180) d -= 360;\n  let h = (c1.h - d) % 360;\n  const l = c1.l - (c2.l * o2 - c1.l * o1) / 2,\n        s = c1.s - (c2.s * o2 - c1.s * o1) / 2;\n  // a = o1 - (o2 - o1) / 2;\n  if (h < 0) h += 360;\n  return hsl(`hsl(${h},${s * 100}%,${l * 100}%)`).toString();\n  // return hsl(`hsl(${h},${s * 100}%,${l * 100}%,${a})`).toString();\n}\n"],"names":["hsl","let","const","scaleOrdinal","color","rgb"],"mappings":"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"}